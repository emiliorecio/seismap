CREATE TABLE agency
(
  id BIGINT NOT NULL,
  code CHARACTER VARYING(3) NOT NULL,
  CONSTRAINT agency_pkey PRIMARY KEY (id),
  CONSTRAINT agency_code_key UNIQUE (code)
)
WITH (
  OIDS=FALSE
);
ALTER TABLE agency OWNER TO postgres;


CREATE TABLE event
(
  id BIGINT NOT NULL,
  date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  depth NUMERIC(4,1) NOT NULL,
  CONSTRAINT event_pkey PRIMARY KEY (id)
)
WITH (
  OIDS=TRUE
);
ALTER TABLE event OWNER TO postgres;

CREATE INDEX event_oid ON event (oid);

SELECT AddGeometryColumn('event', 'location', 900913, 'POINT', 2);

CREATE TABLE magnitude
(
  id BIGINT NOT NULL,
  "type" CHARACTER VARYING(8) NOT NULL,
  "value" NUMERIC(3,1) NOT NULL,
  reportingagency_id BIGINT NOT NULL,
  event_id BIGINT NOT NULL,
  CONSTRAINT magnitude_pkey PRIMARY KEY (id),
  CONSTRAINT fk_event_id FOREIGN KEY (event_id)
      REFERENCES event (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_reportingagency_id FOREIGN KEY (reportingagency_id)
      REFERENCES agency (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
WITH (
  OIDS=FALSE
);
ALTER TABLE magnitude OWNER TO postgres;

CREATE OR REPLACE VIEW eventandaveragemagnitude AS 
 SELECT eventandtype.id AS eventid, eventandtype.date AS eventdate, eventandtype.depth AS eventdepth, eventandtype.location AS eventlocation, eventandtype.type AS magnitudetype, avg(magnitude.value) AS magnitudeaveragevalue
   FROM ( SELECT magnitudetype.type, event.id, event.date, event.depth, event.location
           FROM ( VALUES ('ML'::text), ('MB'::text), ('MS'::text), ('MW'::text), ('MBLG'::text), ('MC'::text)) magnitudetype(type), event) eventandtype
   LEFT JOIN magnitude ON eventandtype.id = magnitude.event_id AND eventandtype.type = magnitude.type::text
  GROUP BY eventandtype.id, eventandtype.date, eventandtype.depth, eventandtype.location, eventandtype.type
  ORDER BY eventandtype.id;

ALTER TABLE eventandaveragemagnitude OWNER TO postgres;

